---
import Footer from '../components/Footer.astro';
import Header from "../components/Header.astro";

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="description" content="I'm April, a Computer Science student and developer keen on software, web, data, and UX." />
		<meta name="keywords" content="Software, Development, Developer, Web, Computer Science, Student, JavaScript, Astro, Tailwind, Java, C#, Python" />
		<meta name="author" content="April Miller" />
		<meta name="robots" content="index, follow">
		<meta name="theme-color" content="#317EFB"/>
		<meta name="generator" content={Astro.generator} />

		<link rel="icon" type="image/png" href="/favicon.png" />

		<title>{title}</title>
	</head>
	<body class="m-auto p-4 w-[600px] max-w-[100%-2rem] text-white text-lg flex flex-col gap-4">
		<Header />
		<slot />
		<Footer />
	</body>
</html>
<style is:global>
	html {
		@apply bg-neutral-900;
	}

	body {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
</style>
